apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: 'maven'
apply plugin: 'jacoco'

sourceCompatibility = 1.8

repositories {
    	 mavenCentral()
}

allprojects {
    project.version = '1.0'
}

dependencies {
    compile "io.dropwizard:dropwizard-core:0.9.1"
    compile "org.apache.commons:commons-lang3:3.3.1"
    compile "com.couchbase.client:java-client:2.2.3"
    compile "io.swagger:swagger-core:1.5.4"
    compile "io.swagger:swagger-annotations:1.5.4"
    compile "io.swagger:swagger-jaxrs:1.5.4", { exclude group: 'javax.ws.rs', module: 'jsr311-api' }
    
    testCompile "junit:junit:4.12"
    testCompile "org.mockito:mockito-all:1.10.19"
    testCompile "io.dropwizard:dropwizard-testing:0.9.1"
    testCompile "org.easytesting:fest-assert-core:2.0M10"
}

test {
    systemProperties 'property': 'value'
}

mainClassName = 'com.assesment.Assessment'

run {
    args 'server','local.yml'
}

def ignoreJacoco = [
        'com/assesment/Assessment*',
        'com/assesment/pojo/*'
]

jacocoTestReport {
    doFirst {
        classDirectories = fileTree(dir: "${buildDir}/classes/main/").exclude(ignoreJacoco)
    }
    reports {
        xml.enabled true
        csv.enabled true
        html.destination "${buildDir}/jacocoHtml"
    }
}

test {
    jvmArgs '-XX:-UseSplitVerifier'
    include '**/**'

    // set heap size for the test JVM(s)
    minHeapSize = "256m"
    maxHeapSize = "1024m"

    jacoco {
        excludes = ignoreJacoco
        append = false
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpFile = file("$buildDir/jacoco/classpathdumps")
    }
}

jacoco {
    toolVersion = "0.7.8"
    reportsDir = file("$buildDir/reports/jacoco")
}
